local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 200, 0, 300)
mainFrame.Position = UDim2.new(0.05, 0, 0.05, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.Parent = screenGui
mainFrame.Visible = true
mainFrame.Active = true
mainFrame.Draggable = true

local eggFrame = Instance.new("Frame")
eggFrame.Size = UDim2.new(0, 200, 0, 300)
eggFrame.Position = UDim2.new(0.05, 0, 0.05, 0)
eggFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
eggFrame.Parent = screenGui
eggFrame.Visible = false
eggFrame.Active = true
eggFrame.Draggable = true

local purchaseTypeFrame = Instance.new("Frame")
purchaseTypeFrame.Size = UDim2.new(0, 200, 0, 300)
purchaseTypeFrame.Position = UDim2.new(0.05, 0, 0.05, 0)
purchaseTypeFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
purchaseTypeFrame.Parent = screenGui
purchaseTypeFrame.Visible = false
purchaseTypeFrame.Active = true
purchaseTypeFrame.Draggable = true

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.Text = "Rebirth Champion X Menu"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
titleLabel.Parent = mainFrame

local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(1, -10, 1, -40)
scrollingFrame.Position = UDim2.new(0, 5, 0, 35)
scrollingFrame.BackgroundTransparency = 1
scrollingFrame.ScrollBarThickness = 6
scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)
scrollingFrame.Parent = mainFrame
scrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollingFrame.ScrollingEnabled = true
scrollingFrame.ElasticBehavior = Enum.ElasticBehavior.Always
scrollingFrame.ScrollingDirection = Enum.ScrollingDirection.Y

local minimizedButton = Instance.new("TextButton")
minimizedButton.Size = UDim2.new(0, 200, 0, 30)
minimizedButton.Position = UDim2.new(0.05, 0, 0.05, 0)
minimizedButton.Text = "Show Menu"
minimizedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizedButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
minimizedButton.Parent = screenGui
minimizedButton.Visible = false
minimizedButton.Active = true
minimizedButton.Draggable = true

local listLayout = Instance.new("UIListLayout")
listLayout.Parent = scrollingFrame
listLayout.Padding = UDim.new(0, 5)
listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
listLayout.SortOrder = Enum.SortOrder.LayoutOrder

local clickActive, buyActive, rebirthActive, teleportActive = false, false, false, false
local autoEggsActive, autoCraftActive, autoClaimActive = false, false, false
local autoSpinActive, autoGingerBuyActive = false, false
local currentRebirthValue = 1
local selectedEgg, selectedPurchaseType = nil, nil
local lastSelectedEgg, lastSelectedPurchaseType = nil, nil

local function createInputField(placeholder, layoutOrder)
    local inputBox = Instance.new("TextBox")
    inputBox.Size = UDim2.new(0.95, 0, 0, 25)
    inputBox.Text = "Use Remote Spy for value!"
    inputBox.PlaceholderText = placeholder
    inputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    inputBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    inputBox.LayoutOrder = layoutOrder
    inputBox.Parent = scrollingFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = inputBox
    
    return inputBox
end

local function createButton(text, layoutOrder, parent)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.95, 0, 0, 30)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.LayoutOrder = layoutOrder
    button.Parent = parent or scrollingFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = button
    
    return button
end

local function createTextLabel(text, parent)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.95, 0, 0, 20)
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.BackgroundTransparency = 1
    label.TextSize = 12
    label.Parent = parent
    return label
end

local function toggleButton(button, isActive, activeText, inactiveText)
    button.Text = isActive and activeText or inactiveText
    button.BackgroundColor3 = isActive and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(50, 50, 50)
end

local function createEggSelectionMenu()
    local eggTitle = Instance.new("TextLabel")
    eggTitle.Size = UDim2.new(1, 0, 0, 30)
    eggTitle.Position = UDim2.new(0, 0, 0, 0)
    eggTitle.Text = "Select Egg Type"
    eggTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    eggTitle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    eggTitle.Parent = eggFrame

    local eggScrollFrame = Instance.new("ScrollingFrame")
    eggScrollFrame.Size = UDim2.new(1, -10, 1, -40)
    eggScrollFrame.Position = UDim2.new(0, 5, 0, 35)
    eggScrollFrame.BackgroundTransparency = 1
    eggScrollFrame.ScrollBarThickness = 6
    eggScrollFrame.Parent = eggFrame

    local eggListLayout = Instance.new("UIListLayout")
    eggListLayout.Parent = eggScrollFrame
    eggListLayout.Padding = UDim.new(0, 5)
    eggListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

    local eggs = {"Snowglobe", "Reindeer", "2025"}
    for i, eggType in ipairs(eggs) do
        local eggButton = createButton(eggType, i, eggScrollFrame)
        eggButton.MouseButton1Click:Connect(function()
            selectedEgg = eggType
            eggFrame.Visible = false
            purchaseTypeFrame.Visible = true
        end)
    end
end

local function createPurchaseTypeMenu()
    local purchaseTitle = Instance.new("TextLabel")
    purchaseTitle.Size = UDim2.new(1, 0, 0, 30)
    purchaseTitle.Position = UDim2.new(0, 0, 0, 0)
    purchaseTitle.Text = "Select Purchase Type"
    purchaseTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    purchaseTitle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    purchaseTitle.Parent = purchaseTypeFrame

    local purchaseScrollFrame = Instance.new("ScrollingFrame")
    purchaseScrollFrame.Size = UDim2.new(1, -10, 1, -40)
    purchaseScrollFrame.Position = UDim2.new(0, 5, 0, 35)
    purchaseScrollFrame.BackgroundTransparency = 1
    purchaseScrollFrame.ScrollBarThickness = 6
    purchaseScrollFrame.Parent = purchaseTypeFrame

    local purchaseListLayout = Instance.new("UIListLayout")
    purchaseListLayout.Parent = purchaseScrollFrame
    purchaseListLayout.Padding = UDim.new(0, 5)
    purchaseListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

    local purchaseTypes = {
        {name = "Single", req = ""},
        {name = "Triple", req = "(Req Able to Triple)"},
        {name = "Octuple", req = "(TellMeIfDoesntWork,UseRspyTo!)"}
    }

    for i, purchaseType in ipairs(purchaseTypes) do
        local container = Instance.new("Frame")
        container.Size = UDim2.new(0.95, 0, 0, 50)
        container.BackgroundTransparency = 1
        container.Parent = purchaseScrollFrame

        local purchaseButton = createButton(purchaseType.name, i, container)
        purchaseButton.Size = UDim2.new(1, 0, 0, 30)
        
        if purchaseType.req ~= "" then
            local reqLabel = createTextLabel(purchaseType.req, container)
            reqLabel.Position = UDim2.new(0, 0, 0, 32)
        end

        purchaseButton.MouseButton1Click:Connect(function()
            selectedPurchaseType = purchaseType.name
            lastSelectedEgg = selectedEgg
            lastSelectedPurchaseType = selectedPurchaseType
            purchaseTypeFrame.Visible = false
            mainFrame.Visible = false
            minimizedButton.Visible = true
            autoEggsActive = true
            spawn(function()
                while autoEggsActive do
                    local args = {
                        [1] = selectedEgg,
                        [2] = selectedPurchaseType
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("Unbox"):InvokeServer(unpack(args))
                    task.wait()
                end
            end)
        end)
    end
end

local function teleportToObjects()
    local storageFolder = workspace.Scripts.CollectGingerbread.Storage
    local player = game.Players.LocalPlayer
    local storageItems = storageFolder:GetChildren()
    
    if #storageItems == 0 then
        teleportButton.Text = "Teleport to Objects (Inactive)"
        teleportButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        return
    end
    
    for _, storageItem in pairs(storageItems) do
        if storageItem.PrimaryPart and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character:SetPrimaryPartCFrame(storageItem.PrimaryPart.CFrame)
            task.wait()
        end
    end
end

local function autoClick()
    while clickActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Click4"):FireServer()
        task.wait()
    end
end

local function autoBuy()
    while buyActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("Upgrade"):InvokeServer("RebirthButtons")
        task.wait()
    end
end

local function autoRebirth()
    while rebirthActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Rebirth"):FireServer(currentRebirthValue)
        task.wait()
    end
end

local function autoCraftAll()
    while autoCraftActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("Request"):InvokeServer("CraftAll", {})
        task.wait()
    end
end

local function autoClaim()
    while autoClaimActive do
        for i = 1, 12 do
            if not autoClaimActive then break end
            game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("ClaimPlaytimeReward"):InvokeServer(i)
            task.wait(1)
        end
        task.wait(5)
    end
end

local function autoSpin()
    while autoSpinActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("GingerbreadWheel"):InvokeServer()
        task.wait()
    end
end

local function autoGingerBuy()
    while autoGingerBuyActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("BuyGingerbreadPassTier"):InvokeServer()
        task.wait()
    end
end

local teleportButton = createButton("Teleport to Gifts", 1)
local clickButton = createButton("Auto Click", 2)
local autoBuyButton = createButton("Auto Buy rebirth", 3)
local rebirthInput = createInputField("Use Remote spy for Rebirth value", 4)
local rebirthButton = createButton("Auto Rebirth", 5)
local autoEggsButton = createButton("Auto Open Eggs" .. (autoEggsActive and " (Active)" or ""), 6)
local autoCraftButton = createButton("Auto Craft Pet", 7)
local autoClaimButton = createButton("Auto Claim Pass", 8)
local autoSpinButton = createButton("Auto Spin GingerBread", 9)
local autoGingerBuyButton = createButton("Auto Buy ginger shop", 10)
local hideButton = createButton("Hide Menu", 11)
local instantExecuteButton = createButton("Remote Spy", 12)

teleportButton.MouseButton1Click:Connect(function()
    teleportActive = not teleportActive
    toggleButton(teleportButton, teleportActive, "Teleport to Objects (Active)", "Teleport to Objects (Inactive)")
    if teleportActive then
        spawn(function()
            while teleportActive do
                teleportToObjects()
                task.wait(1)
            end
        end)
    end
end)

clickButton.MouseButton1Click:Connect(function()
    clickActive = not clickActive
    toggleButton(clickButton, clickActive, "Auto Click (Active)", "Auto Click (Inactive)")
    if clickActive then spawn(autoClick) end
end)

autoBuyButton.MouseButton1Click:Connect(function()
    buyActive = not buyActive
    toggleButton(autoBuyButton, buyActive, "Auto Buy (Active)", "Auto Buy (Inactive)")
    if buyActive then spawn(autoBuy) end
end)

rebirthButton.MouseButton1Click:Connect(function()
    rebirthActive = not rebirthActive
    toggleButton(rebirthButton, rebirthActive, "Auto Rebirth (Active)", "Auto Rebirth (Inactive)")
    if rebirthActive then 
        currentRebirthValue = tonumber(rebirthInput.Text) or 1
        spawn(autoRebirth) 
    end
end)

autoEggsButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    eggFrame.Visible = true
end)

autoCraftButton.MouseButton1Click:Connect(function()
    autoCraftActive = not autoCraftActive
    toggleButton(autoCraftButton, autoCraftActive, "Auto Craft All (Active)", "Auto Craft All (Inactive)")
    if autoCraftActive then spawn(autoCraftAll) end
end)

autoClaimButton.MouseButton1Click:Connect(function()
    autoClaimActive = not autoClaimActive
    toggleButton(autoClaimButton, autoClaimActive, "Auto Claim (Active)", "Auto Claim (Inactive)")
    if autoClaimActive then spawn(autoClaim) end
end)

autoSpinButton.MouseButton1Click:Connect(function()
    autoSpinActive = not autoSpinActive
    toggleButton(autoSpinButton, autoSpinActive, "Auto Spin (Active)", "Auto Spin (Inactive)")
    if autoSpinActive then spawn(autoSpin) end
end)

autoGingerBuyButton.MouseButton1Click:Connect(function()
    autoGingerBuyActive = not autoGingerBuyActive
    toggleButton(autoGingerBuyButton, autoGingerBuyActive, "Auto Ginger Buy (Active)", "Auto Ginger Buy (Inactive)")
    if autoGingerBuyActive then spawn(autoGingerBuy) end
end)

instantExecuteButton.MouseButton1Click:Connect(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua"))()
    end)

hideButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    minimizedButton.Visible = true
    minimizedButton.Position = mainFrame.Position
end)

minimizedButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = true
    minimizedButton.Visible = false
    mainFrame.Position = minimizedButton.Position
end)

local function addCornerRadius(instance)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = instance
end

addCornerRadius(mainFrame)
addCornerRadius(minimizedButton)
addCornerRadius(titleLabel)
addCornerRadius(eggFrame)
addCornerRadius(purchaseTypeFrame)

createEggSelectionMenu()
createPurchaseTypeMenu()

local function createExitButton(parent)
    local exitButton = Instance.new("TextButton")
    exitButton.Size = UDim2.new(0, 20, 0, 20)
    exitButton.Position = UDim2.new(1, -25, 0, 5)
    exitButton.Text = "X"
    exitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    exitButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    exitButton.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = exitButton
    
    exitButton.MouseButton1Click:Connect(function()
        parent.Visible = false
        mainFrame.Visible = true
    end)
end

createExitButton(eggFrame)
createExitButton(purchaseTypeFrame)