local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Create main frame with adjusted size
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 200, 0, 300) -- Reduced height from 480 to 300
mainFrame.Position = UDim2.new(0.05, 0, 0.05, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.Parent = screenGui
mainFrame.Visible = true
mainFrame.Active = true
mainFrame.Draggable = true

-- Menu Title
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.Text = "Rebirth Champion X Menu"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
titleLabel.Parent = mainFrame

-- Create scrolling frame with improved scrolling properties
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(1, -10, 1, -40)
scrollingFrame.Position = UDim2.new(0, 5, 0, 35)
scrollingFrame.BackgroundTransparency = 1
scrollingFrame.ScrollBarThickness = 6
scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)
scrollingFrame.Parent = mainFrame
scrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollingFrame.ScrollingEnabled = true
scrollingFrame.ElasticBehavior = Enum.ElasticBehavior.Always
scrollingFrame.ScrollingDirection = Enum.ScrollingDirection.Y
scrollingFrame.HorizontalScrollBarInset = Enum.ScrollBarInset.None
scrollingFrame.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar

-- Create minimized button with adjusted size
local minimizedButton = Instance.new("TextButton")
minimizedButton.Size = UDim2.new(0, 200, 0, 30)
minimizedButton.Position = UDim2.new(0.05, 0, 0.05, 0)
minimizedButton.Text = "Show Menu"
minimizedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizedButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
minimizedButton.Parent = screenGui
minimizedButton.Visible = false
minimizedButton.Active = true
minimizedButton.Draggable = true

-- Create UIListLayout with optimized spacing
local listLayout = Instance.new("UIListLayout")
listLayout.Parent = scrollingFrame
listLayout.Padding = UDim.new(0, 4) -- Reduced padding from 5 to 4
listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
listLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Function to create button with optimized size
local function createButton(text, layoutOrder)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.95, 0, 0, 30) -- Adjusted size and reduced height from 35 to 30
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.LayoutOrder = layoutOrder
    button.Parent = scrollingFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = button
    
    return button
end

-- Function to create input field with optimized size
local function createInputField(placeholder, layoutOrder)
    local inputBox = Instance.new("TextBox")
    inputBox.Size = UDim2.new(0.95, 0, 0, 25) -- Adjusted size and reduced height from 30 to 25
    inputBox.Text = "1"
    inputBox.PlaceholderText = placeholder
    inputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    inputBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    inputBox.LayoutOrder = layoutOrder
    inputBox.Parent = scrollingFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = inputBox
    
    return inputBox
end

-- Create minimized button
local minimizedButton = Instance.new("TextButton")
minimizedButton.Size = UDim2.new(0, 200, 0, 30)
minimizedButton.Position = UDim2.new(0.05, 0, 0.05, 0)
minimizedButton.Text = "Show Menu"
minimizedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizedButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
minimizedButton.Parent = screenGui
minimizedButton.Visible = false
minimizedButton.Active = true
minimizedButton.Draggable = true

-- Create UIListLayout for automatic button positioning
local listLayout = Instance.new("UIListLayout")
listLayout.Parent = scrollingFrame
listLayout.Padding = UDim.new(0, 5)
listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
listLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Toggle states
local clickActive, buyActive, rebirthActive, teleportActive = false, false, false, false
local autoEggsActive, autoCraftActive, autoClaimActive = false, false, false
local autoSpinActive, autoGingerBuyActive = false, false
local currentRebirthValue = 1

-- Function to create button
local function createButton(text, layoutOrder)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.9, 0, 0, 35)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.LayoutOrder = layoutOrder
    button.Parent = scrollingFrame
    
    -- Add corner radius
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = button
    
    return button
end

-- Function to create input field
local function createInputField(placeholder, layoutOrder)
    local inputBox = Instance.new("TextBox")
    inputBox.Size = UDim2.new(0.9, 0, 0, 30)
    inputBox.Text = "1"
    inputBox.PlaceholderText = placeholder
    inputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    inputBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    inputBox.LayoutOrder = layoutOrder
    inputBox.Parent = scrollingFrame
    
    -- Add corner radius
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = inputBox
    
    return inputBox
end

-- Create buttons with layout orders
local teleportButton = createButton("Teleport to Objects (Inactive)", 1)
local clickButton = createButton("Auto Click", 2)
local autoBuyButton = createButton("Auto Buy rebirth", 3)
local rebirthInput = createInputField("Use Remote spy for value, 4)
local rebirthButton = createButton("Auto Rebirth", 5)
local autoEggsButton = createButton("Auto Open Eggs", 6)
local autoCraftButton = createButton("Auto Craft Pet", 7)
local autoClaimButton = createButton("Auto Claim", 8)
local autoSpinButton = createButton("Auto Spin GingerBread", 9)
local autoGingerBuyButton = createButton("Auto Buy ginger shop", 10)
local hideButton = createButton("Hide Menu", 11)

-- Toggle button function
local function toggleButton(button, isActive, activeText, inactiveText)
    button.Text = isActive and activeText or inactiveText
    button.BackgroundColor3 = isActive and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(50, 50, 50)
end

-- Auto features functions
local function teleportToObjects()
    local storageFolder = workspace.Scripts.CollectGingerbread.Storage
    local player = game.Players.LocalPlayer
    local storageItems = storageFolder:GetChildren()
    
    if #storageItems == 0 then
        teleportButton.Text = "Teleport to Objects (Inactive)"
        teleportButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        return
    end
    
    for _, storageItem in pairs(storageItems) do
        if storageItem.PrimaryPart and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character:SetPrimaryPartCFrame(storageItem.PrimaryPart.CFrame)
            task.wait()
        end
    end
end

local function autoClick()
    while clickActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Click4"):FireServer()
        task.wait()
    end
end

local function autoBuy()
    while buyActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("Upgrade"):InvokeServer("RebirthButtons")
        task.wait()
    end
end

local function autoRebirth()
    while rebirthActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Rebirth"):FireServer(currentRebirthValue)
        task.wait()
    end
end

local function autoOpenEggs()
    while autoEggsActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("Unbox"):InvokeServer("Reindeer", "Triple")
        task.wait()
    end
end

local function autoCraftAll()
    while autoCraftActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("Request"):InvokeServer("CraftAll", {})
        task.wait()
    end
end

local function autoClaim()
    while autoClaimActive do
        for i = 1, 12 do
            if not autoClaimActive then break end
            game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("ClaimPlaytimeReward"):InvokeServer(i)
            task.wait(1)
        end
        task.wait(5)
    end
end

local function autoSpin()
    while autoSpinActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("GingerbreadWheel"):InvokeServer()
        task.wait()
    end
end

local function autoGingerBuy()
    while autoGingerBuyActive do
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("BuyGingerbreadPassTier"):InvokeServer()
        task.wait()
    end
end

-- Button click handlers
teleportButton.MouseButton1Click:Connect(function()
    teleportActive = not teleportActive
    toggleButton(teleportButton, teleportActive, "Teleport to Objects (Active)", "Teleport to Objects (Inactive)")
    if teleportActive then
        spawn(function()
            while teleportActive do
                teleportToObjects()
                task.wait(1)
            end
        end)
    end
end)

clickButton.MouseButton1Click:Connect(function()
    clickActive = not clickActive
    toggleButton(clickButton, clickActive, "Auto Click (Active)", "Auto Click (Inactive)")
    if clickActive then spawn(autoClick) end
end)

autoBuyButton.MouseButton1Click:Connect(function()
    buyActive = not buyActive
    toggleButton(autoBuyButton, buyActive, "Auto Buy (Active)", "Auto Buy (Inactive)")
    if buyActive then spawn(autoBuy) end
end)

rebirthButton.MouseButton1Click:Connect(function()
    rebirthActive = not rebirthActive
    toggleButton(rebirthButton, rebirthActive, "Auto Rebirth (Active)", "Auto Rebirth (Inactive)")
    if rebirthActive then 
        currentRebirthValue = tonumber(rebirthInput.Text) or 1
        spawn(autoRebirth) 
    end
end)

autoEggsButton.MouseButton1Click:Connect(function()
    autoEggsActive = not autoEggsActive
    toggleButton(autoEggsButton, autoEggsActive, "Auto Open Eggs (Active)", "Auto Open Eggs (Inactive)")
    if autoEggsActive then spawn(autoOpenEggs) end
end)

autoCraftButton.MouseButton1Click:Connect(function()
    autoCraftActive = not autoCraftActive
    toggleButton(autoCraftButton, autoCraftActive, "Auto Craft All (Active)", "Auto Craft All (Inactive)")
    if autoCraftActive then spawn(autoCraftAll) end
end)

autoClaimButton.MouseButton1Click:Connect(function()
    autoClaimActive = not autoClaimActive
    toggleButton(autoClaimButton, autoClaimActive, "Auto Claim (Active)", "Auto Claim (Inactive)")
    if autoClaimActive then spawn(autoClaim) end
end)

autoSpinButton.MouseButton1Click:Connect(function()
    autoSpinActive = not autoSpinActive
    toggleButton(autoSpinButton, autoSpinActive, "Auto Spin (Active)", "Auto Spin (Inactive)")
    if autoSpinActive then spawn(autoSpin) end
end)

autoGingerBuyButton.MouseButton1Click:Connect(function()
    autoGingerBuyActive = not autoGingerBuyActive
    toggleButton(autoGingerBuyButton, autoGingerBuyActive, "Auto Ginger Buy (Active)", "Auto Ginger Buy (Inactive)")
    if autoGingerBuyActive then spawn(autoGingerBuy) end
end)

-- Hide/Show functionality
hideButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    minimizedButton.Visible = true
    -- Transfer position when hiding
    minimizedButton.Position = mainFrame.Position
end)

minimizedButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = true
    minimizedButton.Visible = false
    -- Transfer position when showing
    mainFrame.Position = minimizedButton.Position
end)

-- Add corner radius to frames
local function addCornerRadius(instance)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = instance
end

addCornerRadius(mainFrame)
addCornerRadius(minimizedButton)
addCornerRadius(titleLabel)
