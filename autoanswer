local loadGui = loadstring(game:HttpGet("https://raw.githubusercontent.com/GhostDuckyy/UI-Libraries/main/Coasting%20Ui%20Lib/source.lua"))()

local CoastingLibrary = loadGui

local MainTab = CoastingLibrary:CreateTab("Main")
local MainSection = MainTab:CreateSection("Answer")

local answers = {
    "kitchenknife", "treadmill", "samsung", "leopard", "multiple", "rectangle", "americanfootball", "wednesday", "weddingdress", "knife", "Master bedroom", "Cable stripping machine", "Philip Sherman", "The Great Wall of China",
    "Michael Jordan", "Girl With A Pearl Earring", "Invincibility", "Rectangular prism", "Steering wheel",
    "Daily dose of internet", "Taking out the trash", "scientific calculator", "Tamago kake gohan",
    "Amazon Prime Video", "inflatable party decorations", "Police Car", "precious gemstone", "sportswear",
    "Air Conditioning", "Flight Attendancy", "Fire Extinguishers", "red light green light", "Physical Education",
    "Sour Patch kids", "hide and seek", "Chocolate Chip Cookie Dough Ice Cream", "Anna Sophia", "Magdalena",
    "Trinity", "Patrick", "explore the outdoors", "Baby Princess Rosalina", "Metallic Gasoline Blue Green",
    "Playing with controlling toys", "Malfunctioning Playstation Controller", "Duke of Weselton", "Waste",
    "Buttercup", "Granddaughter", "Multipurpose Permanent Marker", "Professional Development", "Microwave Oven",
    "Washing Machine", "compression stockings", "smoothie", "Interactive whiteboard", "Medium Density Fiberboard",
    "Tent pole repair sleeve", "International Space Station", "Health Insurance", "Burrowing Owl",
    "Professional Racketball", "Stand up Paddleboarding", "Volcanic Eruption", "Fairy Godmothers",
    "Statistics and Probability", "advanced interactive multidimensional modeling system", "Identification Card",
    "Limestone Egyptian Waterclock", "Joystick controller", "Baby Princess Rosalina", "Chocolate Ice Cream Sandwich",
    "Stand Up Paddleboarding", "Mozzarella Cheese", "Stand Up Paddleboarding", "United States of America",
    "Super Mario Brothers", "Great White Shark", "Pomegranate", "Flat screen television", "Wheel barrow",
    "Centimeter", "Dumbells", "Christopher Robin", "Sweet Potato", "Cherry Blossom",
    "Hippopotomonstrosesquippedaliophobia", "Vitamin B12", "gaming chair", "Saxophone", "Wisdom Teeth",
    "Harley Quinn", "Frozen Water Bottle", "Hermit Crab", "Galapagos tortoise", "Mountain Everest",
    "Macadamia Nuts", "flower", "rock", "americancheese", "steak", "pig", "angry", "taylorswift", "phone", "spiderman", "kreekcraft", "refrigerator handle", "Electric Bass Guitar", "Rubber Duckie", "German", "colacola",
    "Democratic Republic of the Congo", "Chrysanthemum", "Kitchen Knife", "december", "T-rex", "MCALISTER DELi",
}

local function sendAnswer(answer)
    local ReplicaSignal = game:GetService("ReplicatedStorage"):WaitForChild("ReplicaRemoteEvents"):WaitForChild("Replica_ReplicaSignal")
    local args = {
        [1] = 2,
        [2] = "Answer",
        [3] = answer
    }
    ReplicaSignal:FireServer(unpack(args))
    print("Sended:", answer)
end

local function sendAllAnswers()
    for _, answer in ipairs(answers) do
        sendAnswer(answer)
    end
end

local autoAnswering = false
local autoAnswerLoop = nil

local function startAutoAnswer()
    autoAnswerLoop = coroutine.create(function()
        while autoAnswering do
            for _, answer in ipairs(answers) do
                if not autoAnswering then break end
                sendAnswer(answer)
                wait(0.5)
            end
            wait()
        end
    end)
    coroutine.resume(autoAnswerLoop)
end

MainSection:CreateButton("Answer Question", function()
    sendAllAnswers()
end)

MainSection:CreateToggle("Answer Question", nil, function(Value)
    autoAnswering = Value
    if Value then
        startAutoAnswer()
    else
        autoAnswering = false
    end
end)
game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "Notice",
	Text = "Auto Answer Loop doesn't work,just use the button!,"
})
game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "Reminder",
	Text = "You can took the code and add answer by yourself at github",
})
game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "GitHub links",
	Text = "",
})