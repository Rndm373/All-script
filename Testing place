local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = game.Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Konfigurasi
local AIMBOT_ENABLED = false
local TARGET_PART = "HumanoidRootPart"
local MAX_DISTANCE = 500
local SMOOTHNESS = 0.5
local UPDATE_INTERVAL = 0.1
local lastUpdate = 0

-- Tambahan variabel tracking untuk Sheriff dan Murder
local currentSheriff = nil
local currentMurder = nil
local localPlayerRole = "Innocent"
local roundInProgress = false

-- Warna untuk setiap peran dan item
local roleColors = {
    Sheriff = Color3.fromRGB(0, 0, 255),
    Murder = Color3.fromRGB(255, 0, 0),
    Innocent = Color3.fromRGB(0, 255, 0),
    GunDrop = Color3.fromRGB(255, 255, 0)
}

-- Cache untuk peran dan ESP
local lastValidRoles = {}
local confirmedMurderer = nil
local espCache = {}
local gunDropCache = {}

-- Function to check local player's role
local function checkLocalPlayerRole()
    if not LocalPlayer or not LocalPlayer.Character then return "Innocent" end
    
    local backpack = LocalPlayer:FindFirstChild("Backpack")
    local character = LocalPlayer.Character
    
    -- Check for Murder weapons
    local function hasMurderWeapon(container)
        if not container then return false end
        for _, item in ipairs(container:GetChildren()) do
            if item:IsA("Tool") and 
               (item.Name == "Knife" or 
                string.find(string.lower(item.Name), "knife") or
                string.find(string.lower(item.Name), "blade")) then
                return true
            end
        end
        return false
    end
    
    -- Check for Sheriff weapons
    local function hasSheriffWeapon(container)
        if not container then return false end
        for _, item in ipairs(container:GetChildren()) do
            if item:IsA("Tool") and 
               (item.Name == "Gun" or 
                item.Name == "Revolver" or
                string.find(string.lower(item.Name), "gun") or
                string.find(string.lower(item.Name), "revolver")) then
                return true
            end
        end
        return false
    end
    
    -- Check Murder role
    if hasMurderWeapon(backpack) or hasMurderWeapon(character) then
        currentMurder = LocalPlayer
        return "Murder"
    end
    
    -- Check Sheriff role
    if hasSheriffWeapon(backpack) or hasSheriffWeapon(character) then
        currentSheriff = LocalPlayer
        return "Sheriff"
    end
    
    return "Innocent"
end

-- Reset roles when round ends/starts
local function resetRoles()
    table.clear(lastValidRoles)
    confirmedMurderer = nil
    currentSheriff = nil
    roundInProgress = false
    
    -- Reset semua pemain ke Innocent
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            lastValidRoles[player] = "Innocent"
            if espCache[player] and espCache[player].Frame then
                espCache[player].Frame.BackgroundColor3 = roleColors.Innocent
                if espCache[player].Frame.TextLabel then
                    espCache[player].Frame.TextLabel.Text = player.Name:sub(1, 8) .. (#player.Name > 8 and ".." or "") .. "\nInnocent"
                end
            end
        end
    end
    
    -- Clear ESP cache
    for _, esp in pairs(espCache) do
        if esp and esp.Parent then
            esp:Destroy()
        end
    end
    table.clear(espCache)
    
    -- Clear gun drop cache
    for _, esp in pairs(gunDropCache) do
        if esp and esp.Parent then
            esp:Destroy()
        end
    end
    table.clear(gunDropCache)
end

-- Improved Role Detection
local function getPlayerRole(player)
    if player == LocalPlayer then
        return localPlayerRole
    end
    
    if not player or not player.Character or not player.Character:FindFirstChild("Humanoid") then
        return lastValidRoles[player] or "Innocent"
    end
    
    local backpack = player:FindFirstChild("Backpack")
    local character = player.Character
    
    -- Check for Murder weapons
    local function hasMurderWeapon(container)
        if not container then return false end
        for _, item in ipairs(container:GetChildren()) do
            if item:IsA("Tool") and 
               (item.Name == "Knife" or 
                string.find(string.lower(item.Name), "knife") or
                string.find(string.lower(item.Name), "blade")) then
                return true
            end
        end
        return false
    end
    
    -- Check for Sheriff weapons
    local function hasSheriffWeapon(container)
        if not container then return false end
        for _, item in ipairs(container:GetChildren()) do
            if item:IsA("Tool") and 
               (item.Name == "Gun" or 
                item.Name == "Revolver" or
                string.find(string.lower(item.Name), "gun") or
                string.find(string.lower(item.Name), "revolver")) then
                return true
            end
        end
        return false
    end
    
    -- Murder detection
    if hasMurderWeapon(backpack) or hasMurderWeapon(character) then
        lastValidRoles[player] = "Murder"
        confirmedMurderer = player
        return "Murder"
    end
    
    -- Sheriff detection with anti-duplicate logic
    if (hasSheriffWeapon(backpack) or hasSheriffWeapon(character)) and roundInProgress then
        -- Jika belum ada Sheriff untuk round ini atau player ini adalah Sheriff saat ini
        if not currentSheriff or currentSheriff == player then
            currentSheriff = player
            lastValidRoles[player] = "Sheriff"
            return "Sheriff"
        end
    end
    
    return lastValidRoles[player] or "Innocent"
end

-- Optimized GunDrop ESP
local function createGunDropESP(gunDrop)
    if not gunDrop or not gunDrop.Parent then return end
    if gunDropCache[gunDrop] then
        return gunDropCache[gunDrop]
    end
    
    local esp = Instance.new("BillboardGui")
    esp.Name = "GunDropESP"
    esp.Size = UDim2.new(0, 80, 0, 30)
    esp.AlwaysOnTop = true
    esp.StudsOffset = Vector3.new(0, 1, 0)
    esp.MaxDistance = MAX_DISTANCE
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundTransparency = 0.3
    frame.BackgroundColor3 = roleColors.GunDrop
    frame.BorderSizePixel = 0
    frame.Parent = esp
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextColor3 = Color3.new(0, 0, 0)
    nameLabel.TextSize = 11
    nameLabel.Text = "ðŸ”« GUN"
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.Parent = frame
    
    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
    distanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextColor3 = Color3.new(0, 0, 0)
    distanceLabel.TextSize = 10
    distanceLabel.Font = Enum.Font.GothamBold
    distanceLabel.Parent = frame
    
    -- Improved teleport function
    local function teleportToGun()
        local character = Players.LocalPlayer.Character
        if not character or not character:FindFirstChild("HumanoidRootPart") then return end
        
        local humanoid = character:FindFirstChild("Humanoid")
        if not humanoid or humanoid.Health <= 0 then return end
        
        local originalCFrame = character.HumanoidRootPart.CFrame
        local startTime = tick()
        
        -- Teleport to gun
        character.HumanoidRootPart.CFrame = CFrame.new(gunDrop.Position + Vector3.new(0, 3, 0))
        
        -- Wait briefly
        task.wait(0.15)
        
        -- Return if we haven't been there too long
        if tick() - startTime < 0.3 then
            character.HumanoidRootPart.CFrame = originalCFrame
        end
    end
    
    -- Distance updater
    local updateConnection
    updateConnection = RunService.Heartbeat:Connect(function()
        if not esp or not esp.Parent or not gunDrop or not gunDrop.Parent then
            if updateConnection then
                updateConnection:Disconnect()
            end
            if esp and esp.Parent then
                esp:Destroy()
            end
            gunDropCache[gunDrop] = nil
            return
        end
        
        local character = Players.LocalPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            local distance = (character.HumanoidRootPart.Position - gunDrop.Position).Magnitude
            distanceLabel.Text = string.format("%.0fm", distance/3.571)
        end
    end)
    
    local tpButton = Instance.new("TextButton")
    tpButton.Size = UDim2.new(1, 0, 1, 0)
    tpButton.BackgroundTransparency = 1
    tpButton.Text = "Teleport"
    tpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tpButton.TextSize = 14
    tpButton.Font = Enum.Font.GothamBold
    tpButton.MouseButton1Click:Connect(teleportToGun)
    tpButton.Parent = esp
    
    esp.Parent = gunDrop
    
    gunDropCache[gunDrop] = esp
    
    return esp
end

-- Main Update Loop with proper handling
local function mainUpdate()
    if tick() - lastUpdate < UPDATE_INTERVAL then
        return
    end
    lastUpdate = tick()
    
    -- Check if round is in progress
    if not roundInProgress then
        roundInProgress = true
        resetRoles() -- Reset roles when the round starts
    end
    
    -- Detect if Murderer is around
    local role = checkLocalPlayerRole()
    if localPlayerRole ~= role then
        localPlayerRole = role
    end
    
    -- Update gun drop ESP
    for _, gunDrop in ipairs(workspace:GetChildren()) do
        if gunDrop.Name == "GunDrop" and gunDrop:IsA("Model") then
            createGunDropESP(gunDrop)
        end
    end
    
end

-- Start the main update loop
RunService.RenderStepped:Connect(function()
    pcall(function() mainUpdate() end)
end)
